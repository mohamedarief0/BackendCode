const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
// const bcrypt = require("bcryptjs");
// const User = require("./models/usermodels.js")
const mongodb = require("./config/db.js")

const dashboardRoutes = require('./routes/dashboard.routes.js')
const loginRoutes = require("./routes/login.routes.js")
const registerRoutes = require("./routes/register.routes.js")

const app = express();

const PORT = process.env.PORT || 5000;

// mongodb();
app.use(express.json());
// app.use(cors());
app.use(
  cors({
    origin: "http://localhost:3000", // Adjust this to match your frontend URL
    credentials: true,
  })
);

// // Connect to MongoDB
// const mongoURI =
//   "mongodb+srv://<email>:<password>.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0";
// mongoose
//   .connect(mongoURI, {
//     serverSelectionTimeoutMS: 30000, // Increase to 30 seconds
//   })
//   .then(() => {
//     console.log("MongoDB connected successfully");
//   })
//   .catch((err) => {
//     console.error("MongoDB connection error:", err);
//   });

// const userSchema = new mongoose.Schema({
//   username: { type: String, required: true, unique: true },
//   password: { type: String, required: true },
// });

// const User = mongoose.model("User", userSchema);

// // // Register Route
// app.post("/api/register", async (req, res) => {
//   try {
//     const { username, password } = req.body;
//     const hashedPassword = await bcrypt.hash(password, 10);
//     const user = new User({ username, password: hashedPassword });
//     await user.save();
//     res.status(201).json({ message: "User registered successfully" });
//   } catch (error) {
//     res.status(400).json({ error: error.message });
//   }
// });

app.use("/api/register", registerRoutes);

//login
app.use("/api/login", loginRoutes);

//dashboard
app.use("/api/dashboard", dashboardRoutes);

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
